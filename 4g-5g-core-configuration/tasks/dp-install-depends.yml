---
# tasks file for server-configuration for data plane

- name: check DNS configuration
  ansible.builtin.command:
    cmd: nslookup ubuntu.com
  ignore_errors: false
  when: check_dns == "true"

- name: Create a directory for apt proxy
  ansible.builtin.file:
    path: /etc/apt/apt.conf.d/
    state: directory
    mode: '0744'
  when: use_apt_http_proxy == "true"

- name: Create a proxy file if it doesn't exist
  ansible.builtin.file:
    path: /etc/apt/apt.conf.d/10proxy
    state: touch
    mode: '644'
  when: use_apt_http_proxy == "true"

- name: Edit /etc/apt/apt.conf.d/10proxy and insert Zitel HTTP proxy's IP
  ansible.builtin.lineinfile:
    path: /etc/apt/apt.conf.d/10proxy
    state: present
    line: Acquire::http { Proxy "http://172.17.93.162:3142"; }
  when: use_apt_http_proxy == "true"

- name: Edit /etc/apt/apt.conf.d/10proxy and insert zitel HTTPS proxy's IP
  ansible.builtin.lineinfile:
    path: /etc/apt/apt.conf.d/10proxy
    state: present
    line: Acquire::https { Proxy "http://172.17.93.162:3142"; }
  when: use_apt_http_proxy == "true"

- name: apt-get update
  ansible.builtin.apt:
    update_cache: yes
  ignore_errors: false
  when: install_dependencies == "true"

- name: Resolve package conflicts
  ansible.builtin.apt:
    upgrade: safe
  when: install_dependencies == "true"

- name: Install dependencies packages
  ansible.builtin.apt:
    name:
      - gcc
      - g++
      - libsctp-dev
      - lksctp-tools
      - cmake
      - python3-pip
      - python3-setuptools
      - python3-wheel
      - ninja-build
      - build-essential
      - bison
      - git
      - libgnutls28-dev
      - libgcrypt-dev
      - libssl-dev
      - libidn11-dev
      - libmongoc-dev
      - libbson-dev
      - libyaml-dev
      - libnghttp2-dev
      - libmicrohttpd-dev
      - libcurl4-gnutls-dev
      - libnghttp2-dev
      - libtins-dev
      - libtalloc-dev
      - meson
      - libzmq3-dev
      - libjansson-dev
      - libyaml-dev
      - libgcrypt-dev
      - libidn11-dev
      - clang
      - libnuma-dev
      - libpcre2-dev
      - autoconf
      - automake
      - libtool
      - libreadline-dev
      - texinfo
      - libjson-c-dev
      - pkg-config
      - flex
      - libc-ares-dev
      - python3-dev
      - python3-pytest
      - python3-sphinx
      - libsnmp-dev
      - libcap-dev
      - libelf-dev
      - libunwind-dev
      - dpdk-kmods-dkms
      - rsync

    state: present
  when: install_dependencies == "true"
  ignore_errors: false

- name: Edit /etc/default/grub and configure hugepages
  become: true
  ansible.builtin.lineinfile:
    path: /etc/default/grub
    regexp: '^GRUB_CMDLINE_LINUX_DEFAULT'
    line: 'GRUB_CMDLINE_LINUX_DEFAULT="default_hugepagesz=1G hugepagesz=1G hugepages=32"'
  when: configure_hugepages == "true"

- name: update grub
  ansible.builtin.command: update-grub
  when: configure_hugepages == "true"

- name: configure fstab
  become: true
  ansible.builtin.lineinfile:
    path: /etc/fstab
    regexp: '^nodev'
    line: 'nodev /mnt/huge hugetlbfs pagesize=1GB 0 0'
  when: configure_hugepages == "true"
  ignore_errors: false

- name: Create /mnt/huge directory 
  ansible.builtin.file:
    path: /mnt/huge
    state: directory
    mode: '0755'
  when: configure_hugepages == "true"
  ignore_errors: false

- name: mount the hugepages
  ansible.builtin.shell:
    cmd: mount -a
  when: configure_hugepages == "true"
  ignore_errors: false

- name: Reboot & wait for the server to come back up
  ansible.builtin.reboot:
    reboot_timeout: 900
  when: reboot_after_grub_update == "true"
